<UserControl x:Class="TerminalsManagerUI.Views.AddCableToDBdialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TerminalsManagerUI.Views"
             xmlns:dialogs="clr-namespace:TerminalsManagerUI.ViewModels.Dialogs"
             d:DataContext="{d:DesignInstance Type=dialogs:ViewModelAddCableToDB}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        
        <Label Content="Марка:" Grid.Row="0" Grid.Column="0"/>
        <DockPanel 
            Grid.Row="0"
            Grid.Column="1"
            Margin="3"
            LastChildFill="True">
            <Button 
                Content="Add"
                DockPanel.Dock="Right"
                Command="{Binding AddCableToDbCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
            <TextBox 
                DockPanel.Dock="Left">
                <TextBox.Text>
                    <Binding Path="CableBrand">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DockPanel>

        <Label Content="Кол-во проводов:" Grid.Row="1" Grid.Column="0"/>
        <TextBox 
            Grid.Row="1" 
            Grid.Column="1" 
            Margin="3">
            <TextBox.Text>
            <Binding Path="WiresNumber">
                <Binding.ValidationRules>
                    <DataErrorValidationRule/>
                </Binding.ValidationRules>
            </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Content="Наличие брони:" Grid.Row="2" Grid.Column="0"/>
        <CheckBox 
            Grid.Row="2" 
            Grid.Column="1" 
            Margin="3"
            IsChecked="{Binding IsArmoured, Mode=TwoWay}">
        </CheckBox>

        <Label Content="Код ERP:" Grid.Row="3" Grid.Column="0"/>
        <TextBox 
            Grid.Row="3" 
            Grid.Column="1" 
            Margin="3">
            <TextBox.Text>
                <Binding Path="ErpCode"/>
            </TextBox.Text>
        </TextBox>

        <Label Content="Список в базе:" Grid.Row="4" Grid.Column="0"/>
        <ListBox x:Name="TerminalsListBox"
                 ItemsSource="{Binding CablesListObservable}"
                 SelectedItem="{Binding Path=SelectedCable}"
                 Grid.Row="4"
                 Grid.Column="1"
                 Margin="5">

            <ListBox.ContextMenu>
                <ContextMenu StaysOpen="true">
                    <MenuItem Header="Delete" Foreground="Black" Command="{Binding Path=DeleteCableFromDBCommand}"/>
                </ContextMenu>
            </ListBox.ContextMenu>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Brand}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button
            Grid.Column="1"
            Grid.Row="5"
            Content="OK"
            Command="{Binding OkCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
            />

    </Grid>
</UserControl>
